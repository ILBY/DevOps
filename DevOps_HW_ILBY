# devops. HomeWork

__________ Занятие 4 (20.10.2022). Git __________
	1. С помощью .gitignore, сделать так, чтобы все файлы *.txt не попадали в репозиторий.
		vim .gitignore
			*.txt

	2. Изучить что такое git cherry-pick.
		cherry-pick - позволяет использовать отдельные коммиты из разных веток, применяя их последовательно в текущей ветке, например:
			git cherry pick C2 C6 C7  # используя коммиты C2(из ветки bugFix) C6(testers) C7(security), создает их последовательно в текущей ветке

	3. Продемонстрировать применение git cherry-pick на собственном репозитории (придумать любой пример).
		созданы 3 ветки от main в следующей последовательности: testers (add string in file "cherry-pick"), security (add file "security"), bugFix (add file "bugFix")
		выполнен push всех 4-х веток в origin
		git cherry-pick [1-st hash bugFix] [1-st hash security] [1-st hash testers] # созданы 3 коммита в ветке main в обратной последовательности 
		git push origin main

	4. Какая разница между git rebase и git merge?
		Cлияние сохраняет историю в первозданном виде, а перебазирование ее перезаписывает.
		merge - сливает одну ветку в другую, при этом история обох веток сохраняется. коммит пустой
			git merge testing  # слияние ветки testing с веткой на которой находимся
		rebase - сжимает все изменения ветки в один патч, и применяет их как отдельный коммит на ветку на которой стоим 
			git rebase testing  # объединяет изменения ветки testing в один патч и применяет их как отдельный коммит на ветку на которой стоим
		rebase интерактивный  # позволяет выбрать что и в какой последовательности упаковать в "патч" и применить отдельным коммитом
			git rebase -i HEAD~4 - используя последние 4 коммита текущей ветки, переделать ее интерактивно в ОДИН новый коммит (перетасовать, убрать коммиты)

	5. Какая разница между git pull и git fetch?
		fetch - скачивает с сервера последние изменения. Ничего не меняет.
		pull - скачивает (fetch) с сервера и сливает (merge) все изменения с текущей локальной веткой, если это возможно.

	6. Что такое git submodule?
		submodule - небольшие, как правило независимые проекты со своим Git-ом, подключаемые к основному проекту
			git clone [URL] - клонируем репозиторий содержащий подмодули
			git submodule init - инициализируем локальный конфигурационный файл
			git submodule update - получаем все данные проекта субмодуля с извлечением соответствующего коммита, указанного в основном проекте
			или одной командой:
			git clone --recurse-submodules [URL]
		git submodule update --remote - обновляем все субмодули
		git submodule update --init --recursive - получаем все обновления субмодулей

	7. Изучить гит стратегии https://bool.dev/blog/detail/git-branching-strategies
		Git Flow, GitHub Flow, GitLab Flow, Trunk Based Development

	8. Гит тренажер: https://learngitbranching.js.org


__________ Занятие 3 (18.10.2022). Python __________
	1. Написать Python скрипт, пользователь вводит строку из букв в нижнем регистре и верхнем регистре. 
	Нужно посчитать, сколько в этой строке больших букв.
		s = input('Enter string: ')
		s_up = [char for char in s if char.isupper()]
		print(len(s_up))

	2. Написать Python скрипт, который будет делать ping google.com. 
	Если сервер отвечает, то выводить - success, если нет - doesn't work. 
		import os
		hostname = "google.com"
		response = os.system("ping -c 4 " + "google.com")
		if response == 0:
			print(hostname, 'success')
		else:
			print(hostname, "doesn't work")

	3. Написать Python скрипт, который будет выводить текущую дату и время.
		import datetime
		now = datetime.datetime.now()
		print('Date Time: ', now.strftime("%d-%m-%Y %H:%M"))


__________ Занятие 2 (13.10.2022). Bash __________
	1. Написать скрипт, если в файле есть слово "error", тогда удалить этот файл.
		Bash command:
			# в тексте файла 'error':
			find /home/ubuntu/log/ -type f -exac grep error {} \; -delete
			# в названии файла 'error':
			find /home/ubuntu/log/ -type f -name \*error\* -delete 
			find /home/ubuntu/log/ -type f -name \*error\* -exac rm {} \;
		Script (if/else):
			#!/bin/bash
			find /home/ubuntu/log/ -type f -exac grep error {} \; -delete

	2. Написать скрипт, который будет создавать пользователя, имя пользователя должно вводится с клавиатуры. 
	Если пользователь существует, то вывести сообщение об этом.
		#!/bin/bash
		echo "Enter new username: "
		read name
		if [ "$name" = `sed 's/:.*//' /etc/passwd | grep -w $name` ]
		then
				echo "Such user already exists"
		else
				sudo useradd -m $name
				echo "User $name created successfully"
		fi

	3. Что такое systemd?
		systemd - подсистема инициализации и управления службами установленная в большинстве дистрибутивов Linux, позволяет:
			- запускать систему в разных режимах работы (например terminal/GUI), target - аналог "runlevel" в SysV;
			- запускать и контролировать службы;
			- имеет службу журналирования journald;
			- запускать сервисы по расписанию (аналог crontab).


__________ Занятие 1 (11.10.2022). Linux __________
	1. Найти топ 7 директорий на сервере, которые больше всего занимают память и записать их в файл:
		du / | sort -rn | head -n 7 > /home/ubuntu/find.txt
	2. Создать пользователя и добавить его в группу sudo:
		useradd -m alex && usermod -aG sudo alex
	3. Изучить, что такое zombie процесс (спрашивают на собесах).
	4. Изучить, что показывает команда top.